// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Side menu tests renders menu correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SideMenu />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="o-aside-layout__burger u-display-md--none u-cursor--pointer js-hit-area"
          onClick={[Function]}
        >
          <Hamburger
            darkTheme={true}
            open={false}
          />
        </div>,
        <aside
          className="o-aside-layout__sidebar"
        >
          <SideNav>
            <div
              className="c-side-nav__burger u-cursor--pointer js-hit-area u-display--none"
              onClick={[Function]}
            >
              <Hamburger
                darkTheme={true}
                open={false}
              />
            </div>
          </SideNav>
        </aside>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Hamburger
            darkTheme={true}
            open={false}
          />,
          "className": "o-aside-layout__burger u-display-md--none u-cursor--pointer js-hit-area",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "darkTheme": true,
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SideNav>
            <div
              className="c-side-nav__burger u-cursor--pointer js-hit-area u-display--none"
              onClick={[Function]}
            >
              <Hamburger
                darkTheme={true}
                open={false}
              />
            </div>
          </SideNav>,
          "className": "o-aside-layout__sidebar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="c-side-nav__burger u-cursor--pointer js-hit-area u-display--none"
              onClick={[Function]}
            >
              <Hamburger
                darkTheme={true}
                open={false}
              />
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Hamburger
                darkTheme={true}
                open={false}
              />,
              "className": "c-side-nav__burger u-cursor--pointer js-hit-area u-display--none",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "darkTheme": true,
                "open": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
        "type": "aside",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="o-aside-layout__burger u-display-md--none u-cursor--pointer js-hit-area"
            onClick={[Function]}
          >
            <Hamburger
              darkTheme={true}
              open={false}
            />
          </div>,
          <aside
            className="o-aside-layout__sidebar"
          >
            <SideNav>
              <div
                className="c-side-nav__burger u-cursor--pointer js-hit-area u-display--none"
                onClick={[Function]}
              >
                <Hamburger
                  darkTheme={true}
                  open={false}
                />
              </div>
            </SideNav>
          </aside>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Hamburger
              darkTheme={true}
              open={false}
            />,
            "className": "o-aside-layout__burger u-display-md--none u-cursor--pointer js-hit-area",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "darkTheme": true,
              "open": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SideNav>
              <div
                className="c-side-nav__burger u-cursor--pointer js-hit-area u-display--none"
                onClick={[Function]}
              >
                <Hamburger
                  darkTheme={true}
                  open={false}
                />
              </div>
            </SideNav>,
            "className": "o-aside-layout__sidebar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="c-side-nav__burger u-cursor--pointer js-hit-area u-display--none"
                onClick={[Function]}
              >
                <Hamburger
                  darkTheme={true}
                  open={false}
                />
              </div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Hamburger
                  darkTheme={true}
                  open={false}
                />,
                "className": "c-side-nav__burger u-cursor--pointer js-hit-area u-display--none",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "darkTheme": true,
                  "open": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": "aside",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
